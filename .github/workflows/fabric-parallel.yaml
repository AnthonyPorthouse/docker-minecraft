name: Fabric
on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'
  pull_request:
    paths:
      - .github/actions
      - .github/workflows/fabric-parallel.yaml
      - fabric
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  get-versions:
    name: Get Fabric Releases
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.versions.outputs.latest }}
      versions: ${{ steps.versions.outputs.versions }}
    steps:
      - uses: actions/checkout@v3
      - name: Get Fabric Releases
        id: versions
        run: ./fabric/build/get-versions.sh

  build-fabric:
    name: Build Fabric ${{ matrix.version }}
    needs: get-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ${{ fromJSON(needs.get-versions.outputs.versions) }}
    permissions:
      packages: write
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}/fabric
      LATEST_VERSION: ${{ needs.get-versions.outputs.latest }}
      VERSION: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v3

      # Normalize our Image name and Update our ENV
      - name: Normalize Image Name
        uses: ./.github/actions/normalize-image-name
        id: normalize-image-name
        with:
          image-name: ${{ env.IMAGE_NAME }}
      - name: Update Image Name
        run: echo "IMAGE_NAME=${{ steps.normalize-image-name.outputs.image-name }}" >> "$GITHUB_ENV"

      - name: Build
        uses: ./.github/actions/build-and-deploy
        with:
          docker-password: ${{ secrets.GITHUB_TOKEN }}
          context: fabric
          image-name: ${{ env.IMAGE_NAME }}
          version: ${{ env.VERSION }}
          latest-version: ${{ env.LATEST_VERSION }}
          push: ${{ github.ref == 'refs/heads/main' }}
          build-args: |
            FABRIC_VERSION=${{ env.VERSION }}
